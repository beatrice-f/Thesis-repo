# -*- coding: utf-8 -*-
"""DataCleaning1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11vcWgkWgZkKYN3DBbtkMhrx4oD-o0X7w
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install python-docx 
!pip install docx2txt

from pandas.io.common import file_exists
import os
from docx import Document
from google.colab import files
from collections import defaultdict

#Step 1 -> extracting the documents:
path_name = "path" 
pathName = os.chdir(path_name) 

folders = []
files = []
fileNames = os.listdir(pathName)    
for fileName in fileNames:
    files.append(f"{path_name}/{fileName}") if fileName.lower().endswith(".docx") else folders.append(f"{path_name}/{fileName}")

for fileName in folders:
  docs = os.listdir(fileName)
  for doc in docs: 
    files.append(f"{fileName}/{doc}") 


#Lista di tutti i file presa direttamente dal drive:
files_ = [ele.replace("'",'') if ele[-1] == "'" else ele for ele in files]

#Step 2 -> reading and checking the documents 
error = 0
check_files = [] 

for i,doc_name in enumerate(files_): 
    try:
      fullText = [] 
      documento = Document(doc_name)  
      for para in documento.paragraphs:
          fullText.append(f"{para.text}\n")
          
      fullText = ''.join(fullText)
      check_files += [fullText]
    except:
      error += 1
    print(i)

print(error)

#Step 3 -> creating the dataframe
dizionario = defaultdict(list)
for fullText in check_files:
  dizionario['text'] += fullText.split('Body\n')[1].strip().split('\n\n')[:1] #body
  dizionario['author'] += [(' '.join([ele for ele in fullText.split('\n') if 'Byline:' in ele])).replace('Byline:','')] #author

  bilboard_index = [pos for pos,c in enumerate(fullText.split('\n')) if c != '' and c in ['Billboard','Billboard.com','billboard.com','billboard','BILLBOARD']]
  dizionario['title'] += [' '.join(fullText.split('\n')[:bilboard_index[0]]).strip()]

  date = [ele for ele in fullText.split('\n')[bilboard_index[0]:] if len(ele) > 0]
  date = date[1].strip() if 'Correction Appended' not in date[1].strip() else ' '.join([ele.replace('Correction-Date:','').strip() for ele in date if 'Correction-Date:' in ele])
  date = ' '.join([ele.replace('Correction-Date:','').strip() for ele in date if 'Correction-Date:' in ele]) if date.split()[-1].replace(',','').isdecimal() == False and date.replace(',','').split()[-2].isdecimal() == False else date

  dizionario['month'] += [date.split()[0].lower().capitalize() if len(date) > 0 else ''] #month
  dizionario['year'] += [(date.split()[-1].strip() if date[-1].isdecimal() == True else date.split()[-2].strip()) if len(date) > 0 else ''] #year

  subjects = ' '.join([ele for ele in fullText.split('\n') if 'Subject:' in ele])
  dizionario['subjects'] += [subjects.replace('Subject:','').strip().lower() if len(subjects) > 0 else ''] #subjects

#dict to df
import pandas as pd 
dataframe= pd.DataFrame(dizionario)

#delete_duplicates:
dataframe = dataframe.drop_duplicates()
dataframe.to_csv('dataset.csv',index=False)
